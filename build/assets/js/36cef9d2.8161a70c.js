"use strict";(self.webpackChunksonnet_docs=self.webpackChunksonnet_docs||[]).push([[4973],{9265:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>o,toc:()=>u});var a=n(4848),i=n(8453);const s={slug:"protype-in-js",title:"Protype in JS",authors:{name:"Talha Mujahid",title:"Software Engineer",url:"https://github.com/htmujahid",image_url:"https://avatars.githubusercontent.com/u/58030954?v=4"},tags:["javascript"]},r="Protype in JS",o={permalink:"/blog/protype-in-js",editUrl:"https://github.com/sonnetjs/sonnetjs.github.io/tree/main/blog/javascript/12-protype-in-js.md",source:"@site/blog/javascript/12-protype-in-js.md",title:"Protype in JS",description:"JavaScript is an object-oriented programming (OOP) language that uses prototypes instead of classes for creating objects. Prototypes are a fundamental concept in JavaScript and understanding them is essential in creating efficient and effective code.",date:"2024-05-15T13:15:30.649Z",tags:[{label:"javascript",permalink:"/blog/tags/javascript"}],readingTime:4.325,hasTruncateMarker:!0,authors:[{name:"Talha Mujahid",title:"Software Engineer",url:"https://github.com/htmujahid",image_url:"https://avatars.githubusercontent.com/u/58030954?v=4",imageURL:"https://avatars.githubusercontent.com/u/58030954?v=4"}],frontMatter:{slug:"protype-in-js",title:"Protype in JS",authors:{name:"Talha Mujahid",title:"Software Engineer",url:"https://github.com/htmujahid",image_url:"https://avatars.githubusercontent.com/u/58030954?v=4",imageURL:"https://avatars.githubusercontent.com/u/58030954?v=4"},tags:["javascript"]},unlisted:!1,prevItem:{title:"Function Binding in JS",permalink:"/blog/function-binding-in-js"},nextItem:{title:"Regex Expressions in JS",permalink:"/blog/regex-expressions-in-js"}},c={authorsImageUrls:[void 0]},u=[];function p(t){const e={p:"p",...(0,i.R)(),...t.components};return(0,a.jsx)(e.p,{children:"JavaScript is an object-oriented programming (OOP) language that uses prototypes instead of classes for creating objects. Prototypes are a fundamental concept in JavaScript and understanding them is essential in creating efficient and effective code."})}function l(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(p,{...t})}):p(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>o});var a=n(6540);const i={},s=a.createContext(i);function r(t){const e=a.useContext(s);return a.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:r(t.components),a.createElement(s.Provider,{value:e},t.children)}}}]);