"use strict";(self.webpackChunksonnet_docs=self.webpackChunksonnet_docs||[]).push([[5145],{2225:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var r=a(4848),n=a(8453);const o={slug:"iterator-generator-and-closure-in-js",title:"Iterator, Generator and Closure in JS",authors:{name:"Talha Mujahid",title:"Software Engineer",url:"https://github.com/htmujahid",image_url:"https://avatars.githubusercontent.com/u/58030954?v=4"},tags:["javascript"]},s="Iterator, Generator and Closure in JS",i={permalink:"/blog/iterator-generator-and-closure-in-js",editUrl:"https://github.com/sonnetjs/sonnetjs.github.io/tree/main/blog/javascript/20-iterator-generator-and-closure-in-js.md",source:"@site/blog/javascript/20-iterator-generator-and-closure-in-js.md",title:"Iterator, Generator and Closure in JS",description:"JavaScript is a versatile language that supports several powerful features that make it easier to write efficient, reusable, and modular code. In this blog post, we\u2019ll take a closer look at three such features \u2014 iterators, generators, and closures.",date:"2024-05-15T13:15:30.801Z",tags:[{label:"javascript",permalink:"/blog/tags/javascript"}],readingTime:3.75,hasTruncateMarker:!0,authors:[{name:"Talha Mujahid",title:"Software Engineer",url:"https://github.com/htmujahid",image_url:"https://avatars.githubusercontent.com/u/58030954?v=4",imageURL:"https://avatars.githubusercontent.com/u/58030954?v=4"}],frontMatter:{slug:"iterator-generator-and-closure-in-js",title:"Iterator, Generator and Closure in JS",authors:{name:"Talha Mujahid",title:"Software Engineer",url:"https://github.com/htmujahid",image_url:"https://avatars.githubusercontent.com/u/58030954?v=4",imageURL:"https://avatars.githubusercontent.com/u/58030954?v=4"},tags:["javascript"]},unlisted:!1,prevItem:{title:"Proxy in JS",permalink:"/blog/proxy-in-js"},nextItem:{title:"Call Stack and Callback Queue in JS",permalink:"/blog/call-stack-and-callback-queue-in-js"}},u={authorsImageUrls:[void 0]},l=[];function c(t){const e={p:"p",...(0,n.R)(),...t.components};return(0,r.jsx)(e.p,{children:"JavaScript is a versatile language that supports several powerful features that make it easier to write efficient, reusable, and modular code. In this blog post, we\u2019ll take a closer look at three such features \u2014 iterators, generators, and closures."})}function h(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(c,{...t})}):c(t)}},8453:(t,e,a)=>{a.d(e,{R:()=>s,x:()=>i});var r=a(6540);const n={},o=r.createContext(n);function s(t){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:s(t.components),r.createElement(o.Provider,{value:e},t.children)}}}]);